[{"name":"app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n#\r\n\r\n#source(\"https://raw.githubusercontent.com/clazinusveijer/shinylive_BIA/refs/heads/main/run_simulation.R\")\r\n\r\nrun_simulation_st <- function(c_trt){\r\n  if (!require('pacman')) install.packages('pacman'); library(pacman) \r\n  p_load_gh(\"DARTH-git/darthtools\") \r\n  p_load(\"devtools\", \"dplyr\", \"scales\", \"ellipse\", \"ggplot2\", \"lazyeval\", \"igraph\", \"truncnorm\", \"ggraph\", \"reshape2\", \"stringr\", \"dampack\")\r\n  input_parameters <- function(c_trt, modifier_mild_moderate){\r\n    cycle_length   <- 1/365  # cycle length equal to one year\r\n    n_cycles       <- 60    # time horizon, number of cycles\r\n    v_names_states <- c(\"MV_mild\", \"ICU_mild\", \"GW_mild\", \"REC_mild\",   \"D_mild\",\"MV_moderate\",\"ICU_moderate\", \"GW_moderate\",  \"REC_moderate\", \"D_moderate\",\"MV_severe\",\"ICU_severe\", \"GW_severe\", \"REC_severe\", \"D_severe\")\r\n    n_states       <- length(v_names_states) # number of health states \r\n    v_names_str   <- c(\"Standard of care\",   # store the strategy names\r\n                       \"FX06 treatment\") \r\n    n_str         <- length(v_names_str)     # number of strategies\r\n    \r\n    df_prob_mv_discont <- read.csv(\"https://raw.githubusercontent.com/clazinusveijer/datasets_CEA_IXION/refs/heads/main/df_prob_mv_discont.csv\", sep = ',')\r\n    n_i            <- 2377\r\n    p_i_mild       <- 0.300\r\n    p_i_moderate   <- 0.465\r\n    p_i_severe     <- 0.234\r\n    n_i_mild       <- round(n_i * p_i_mild,0)\r\n    n_i_moderate   <- round(n_i * p_i_moderate,0)\r\n    n_i_severe     <- n_i - n_i_mild - n_i_moderate #round(n_i * p_i_severe,0)\r\n    \r\n    # initial number of patients per health state\r\n    r_i_MV  <- 0.856\r\n    r_i_ICU <- 1-r_i_MV # 0.144 \r\n    n_i_mild_MV  <- round(n_i_mild*r_i_MV,0)\r\n    n_i_mild_ICU <- round(n_i_mild*r_i_ICU,0)\r\n    n_i_moderate_MV  <- round(n_i_moderate*r_i_MV,0)\r\n    n_i_moderate_ICU <- round(n_i_moderate*r_i_ICU,0)\r\n    n_i_severe_MV  <- round(n_i_severe*r_i_MV,0)\r\n    n_i_severe_ICU <- round(n_i_severe*r_i_ICU,0)\r\n    \r\n    modifier_mild_moderate  <- 0.1 #modifier_mild_moderate\r\n    modifier_moderate_severe<- 0.1 #modifier_moderate_severe\r\n    modifier_mild_severe    <- 0.1 #modifier_mild_severe\r\n    \r\n    modifier_MV_ICU_mild      <- 0.1 #modifier_MV_ICU_mild\r\n    modifier_MV_ICU_moderate  <- 0.1 #modifier_MV_ICU_moderate\r\n    modifier_MV_ICU_severe    <- 0.1 #modifier_MV_ICU_severe\r\n    \r\n    # Disease progression up to 7 days post-diagnosis of ARDS\r\n    d_progression_period    <- 7\r\n    r_mild_moderate         <- 0.258\r\n    r_moderate_severe       <- 0.127\r\n    r_mild_severe           <- 0.045\r\n    p_mild_moderate_soc     <- 1-((1-r_mild_moderate)^(1/d_progression_period))\r\n    p_moderate_severe_soc   <- 1-((1-r_moderate_severe)^(1/d_progression_period))\r\n    p_mild_severe_soc       <- 1-((1-r_mild_severe)^(1/d_progression_period))\r\n    \r\n    p_mild_moderate_soc     <- c(p_mild_moderate_soc, 0)\r\n    p_moderate_severe_soc   <- c(p_moderate_severe_soc, 0)\r\n    p_mild_severe_soc       <- c(p_mild_severe_soc, 0)\r\n    \r\n    r_mild_moderate_trt     <- if_else(r_mild_moderate - modifier_mild_moderate < 0, 0, r_mild_moderate - modifier_mild_moderate)\r\n    r_moderate_severe_trt   <- if_else(r_moderate_severe - modifier_moderate_severe < 0, 0, r_moderate_severe - modifier_moderate_severe)\r\n    r_mild_severe_trt       <- if_else(r_mild_severe - modifier_mild_severe < 0, 0, r_mild_severe - modifier_mild_severe)\r\n    \r\n    p_mild_moderate_trt     <- 1-((1-r_mild_moderate_trt)^(1/d_progression_period))\r\n    p_moderate_severe_trt   <- 1-((1-r_moderate_severe_trt)^(1/d_progression_period))\r\n    p_mild_severe_trt       <- 1-((1-r_mild_severe_trt)^(1/d_progression_period))\r\n    \r\n    p_mild_moderate_trt     <- c(p_mild_moderate_trt, 0)\r\n    p_moderate_severe_trt   <- c(p_moderate_severe_trt, 0)\r\n    p_mild_severe_trt       <- c(p_mild_severe_trt, 0)\r\n    \r\n    # 28-day mortality\r\n    r_mort_28_mild          <- 0.296\r\n    r_mort_28_moderate      <- 0.352\r\n    r_mort_28_severe        <- 0.409\r\n    p_D_mild                <- 1 - (1 - r_mort_28_mild)^(1 / 28)\r\n    p_D_moderate            <- 1 - (1 - r_mort_28_moderate)^(1 / 28)\r\n    p_D_severe              <- 1 - (1 - r_mort_28_severe)^(1 / 28)\r\n    \r\n    ### MV LOS\r\n    median_MV_LOS_mild      <- 6\r\n    median_MV_LOS_moderate  <- 8\r\n    median_MV_LOS_severe    <- 11\r\n    \r\n    ### time-dependent MV LOS\r\n    p_MV_ICU_mild_soc         <- df_prob_mv_discont$probability[which(df_prob_mv_discont$severity_group == 'mild')]\r\n    p_MV_ICU_moderate_soc     <- df_prob_mv_discont$probability[which(df_prob_mv_discont$severity_group == 'moderate')]\r\n    p_MV_ICU_severe_soc       <- df_prob_mv_discont$probability[which(df_prob_mv_discont$severity_group == 'severe')]\r\n    \r\n    p_MV_ICU_mild_trt         <- df_prob_mv_discont$probability[which(df_prob_mv_discont$severity_group == 'mild')]*(1+modifier_MV_ICU_mild)\r\n    p_MV_ICU_severe_trt       <- df_prob_mv_discont$probability[which(df_prob_mv_discont$severity_group == 'severe')]*(1+modifier_MV_ICU_moderate)\r\n    p_MV_ICU_moderate_trt     <- df_prob_mv_discont$probability[which(df_prob_mv_discont$severity_group == 'moderate')]*(1+modifier_MV_ICU_severe)\r\n    \r\n    # ICU LOS\r\n    median_ICU_LOS_mild     <- 10\r\n    median_ICU_LOS_moderate <- 12\r\n    median_ICU_LOS_severe   <- 14\r\n    median_ICU_LOS_mild_net     <- median_ICU_LOS_mild - median_MV_LOS_mild\r\n    median_ICU_LOS_moderate_net <- median_ICU_LOS_moderate - median_MV_LOS_moderate\r\n    median_ICU_LOS_severe_net   <- median_ICU_LOS_severe - median_MV_LOS_severe\r\n    \r\n    r_ICU_mild              <- -log(0.5)/median_ICU_LOS_mild_net\r\n    r_ICU_moderate          <- -log(0.5)/median_ICU_LOS_moderate_net\r\n    r_ICU_severe            <- -log(0.5)/median_ICU_LOS_severe_net\r\n    \r\n    p_ICU_GW_mild           <- 1 - exp(-r_ICU_mild)\r\n    p_ICU_GW_moderate       <- 1 - exp(-r_ICU_moderate)\r\n    p_ICU_GW_severe         <- 1 - exp(-r_ICU_severe)\r\n    \r\n    # GW LOS\r\n    median_GW_LOS_mild      <- 23\r\n    median_GW_LOS_moderate  <- 22\r\n    median_GW_LOS_severe    <- 26\r\n    median_GW_LOS_mild_net      <- median_GW_LOS_mild - median_ICU_LOS_mild\r\n    median_GW_LOS_moderate_net  <- median_GW_LOS_moderate - median_ICU_LOS_moderate\r\n    median_GW_LOS_severe_net    <- median_GW_LOS_severe - median_ICU_LOS_severe\r\n    \r\n    r_GW_mild               <- -log(0.5)/median_GW_LOS_mild_net\r\n    r_GW_moderate           <- -log(0.5)/median_GW_LOS_moderate_net\r\n    r_GW_severe             <- -log(0.5)/median_GW_LOS_severe_net\r\n    \r\n    p_GW_REC_mild           <- 1 - exp(-r_GW_mild)\r\n    p_GW_REC_moderate       <- 1 - exp(-r_GW_moderate)\r\n    p_GW_REC_severe         <- 1 - exp(-r_GW_severe)\r\n    \r\n    #### Costs \r\n    c_MV      <- 2225 # Each additional day on mechanically ventilated ICU patients\r\n    c_ICU     <- 930 # Each additional day on non-mechanically ventilated ICU patients\r\n    c_GW      <- 420  # Each additional day on the general ward for non-ICU patients\r\n    c_REC     <- 0\r\n    c_D       <- 0     # annual cost of being dead\r\n    c_trt     <- c_trt # five-day treatment 600/5\r\n    df_c      <- data.frame(type = c(\"c_MV\", \"c_ICU\", \"c_GW\", \"c_REC\", \"c_D\", \"c_trt\"), cost = c(c_MV, c_ICU, c_GW, c_REC, c_D, c_trt))\r\n    \r\n    # sample from age distribution an initial age for every individual\r\n    mean_age <- 61.5\r\n    sd_age <- 14.9\r\n    v_age_init <- rnorm(n_i, mean = mean_age, sd = sd_age)\r\n    min_age <- 16\r\n    max_age <- 99\r\n    df_age <- data.frame(age = round(v_age_init, 0))\r\n    df_age <- df_age %>% mutate(age = if_else(age<min_age, min_age, if_else(age>max_age, max_age, age)))\r\n    df_age <- df_age %>% group_by(age) %>% summarize(prop = n()/n_i)\r\n    v_age_init  <- sample(x = df_age$age, prob = df_age$prop, size = n_i, replace = TRUE) \r\n    \r\n    v_M_init_mild <- rep(c(\"MV_mild\", \"ICU_mild\"), times = c(n_i_mild_MV, n_i_mild_ICU))\r\n    df_X_mild <- data.frame(ID = 1:n_i_mild, Severity = \"mild\", M_init = v_M_init_mild, n_cycles_MV = if_else(v_M_init_mild == \"MV_mild\", 1, 0),   n_cycles_ICU = 1, trt_YN = 1, mild_moderate_YN = 1, mild_severe_YN = 1, moderate_severe_YN = 2)\r\n    v_M_init_moderate <- rep(c(\"MV_moderate\", \"ICU_moderate\"), times = c(n_i_moderate_MV, n_i_moderate_ICU))\r\n    df_X_moderate <- data.frame(ID = (n_i_mild+1):(n_i_mild+n_i_moderate), Severity = \"moderate\", M_init = v_M_init_moderate, n_cycles_MV =   if_else(v_M_init_moderate == \"MV_moderate\", 1, 0), n_cycles_ICU = 1, trt_YN = 1, mild_moderate_YN = 2, mild_severe_YN = 2, moderate_severe_YN =   1)\r\n    v_M_init_severe <- rep(c(\"MV_severe\", \"ICU_severe\"), times = c(n_i_severe_MV, n_i_severe_ICU))\r\n    df_X_severe <- data.frame(ID = (n_i_mild+n_i_moderate+1):n_i, Severity = \"severe\", M_init = v_M_init_severe, n_cycles_MV =   if_else(v_M_init_severe == \"MV_severe\", 1, 0), n_cycles_ICU = 1, trt_YN = 1, mild_moderate_YN = 2, mild_severe_YN = 2, moderate_severe_YN = 2)\r\n    \r\n    df_X <- rbind(df_X_mild, df_X_moderate, df_X_severe)\r\n    df_X <- df_X %>% mutate(Age = v_age_init,\r\n                            age_group_id = if_else(Age < 65, 1, 2))\r\n    \r\n    inputs <- list(cycle_length = cycle_length\r\n                   , n_cycles = n_cycles\r\n                   , v_names_states = v_names_states\r\n                   , v_names_str = v_names_str\r\n                   , n_str = n_str\r\n                   , n_states = n_states\r\n                   , n_i = n_i\r\n                   , df_c = df_c\r\n                   , df_X = df_X\r\n                   , p_mild_moderate_soc = p_mild_moderate_soc\r\n                   , p_moderate_severe_soc = p_moderate_severe_soc\r\n                   , p_mild_severe_soc = p_mild_severe_soc\r\n                   , p_mild_moderate_trt = p_mild_moderate_trt\r\n                   , p_moderate_severe_trt = p_moderate_severe_trt\r\n                   , p_mild_severe_trt = p_mild_severe_trt\r\n                   , p_D_mild = p_D_mild\r\n                   , p_D_moderate = p_D_moderate\r\n                   , p_D_severe = p_D_severe\r\n                   , p_MV_ICU_mild_soc = p_MV_ICU_mild_soc\r\n                   , p_MV_ICU_moderate_soc = p_MV_ICU_moderate_soc\r\n                   , p_MV_ICU_severe_soc = p_MV_ICU_severe_soc\r\n                   , p_MV_ICU_mild_trt = p_MV_ICU_mild_trt\r\n                   , p_MV_ICU_moderate_trt = p_MV_ICU_moderate_trt\r\n                   , p_MV_ICU_severe_trt = p_MV_ICU_severe_trt\r\n                   , p_ICU_GW_mild = p_ICU_GW_mild\r\n                   , p_ICU_GW_moderate = p_ICU_GW_moderate\r\n                   , p_ICU_GW_severe = p_ICU_GW_severe\r\n                   , p_GW_REC_mild = p_GW_REC_mild\r\n                   , p_GW_REC_moderate = p_GW_REC_moderate\r\n                   , p_GW_REC_severe = p_GW_REC_severe\r\n    )\r\n    return(inputs)\r\n  }\r\n  \r\n  Probs <- function(M_t, t, Trt, input_params, df_X) { \r\n    #df_X <- as.data.frame(input_params$df_X)\r\n    # Treatment specific transition probabilities\r\n    if (Trt == \"Standard of care\") {\r\n      p_mild_moderate <- input_params$p_mild_moderate_soc\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      p_mild_moderate <- input_params$p_mild_moderate_trt\r\n    }  else { \r\n      warning(\"Invalid treatment type (mild_moderate)\") \r\n    }\r\n    if (Trt == \"Standard of care\") {\r\n      p_moderate_severe <- input_params$p_moderate_severe_soc\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      p_moderate_severe <- input_params$p_moderate_severe_trt\r\n    }  else {\r\n      warning(\"Invalid treatment type (moderate_severe)\") \r\n    }\r\n    if (Trt == \"Standard of care\") {\r\n      p_mild_severe <- input_params$p_mild_severe_soc\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      p_mild_severe <- input_params$p_mild_severe_trt\r\n    }  else {\r\n      warning(\"Invalid treatment type (mild_severe)\") \r\n    }\r\n    if (Trt == \"Standard of care\") {\r\n      p_MV_ICU_mild <- input_params$p_MV_ICU_mild_soc\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      p_MV_ICU_mild <- input_params$p_MV_ICU_mild_trt\r\n    } else {\r\n      warning(\"Invalid treatment type (MV_ICU_mild)\") \r\n    }\r\n    if (Trt == \"Standard of care\") {\r\n      p_MV_ICU_moderate <- input_params$p_MV_ICU_moderate_soc\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      p_MV_ICU_moderate <- input_params$p_MV_ICU_moderate_trt\r\n    } else { \r\n      warning(\"Invalid treatment type (MV_ICU_moderate\") \r\n    }\r\n    if (Trt == \"Standard of care\") {\r\n      p_MV_ICU_severe <- input_params$p_MV_ICU_severe_soc\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      p_MV_ICU_severe <- input_params$p_MV_ICU_severe_trt\r\n    } else {\r\n      warning(\"Invalid treatment type (MV_ICU_severe)\") \r\n    }\r\n    \r\n    # create matrix of state transition probabilities\r\n    m_p_t           <- matrix(0, nrow = input_params$n_states, ncol = input_params$n_i)  \r\n    # give the state names to the rows\r\n    rownames(m_p_t) <- input_params$v_names_states                               \r\n    \r\n    ######################## mild\r\n    # transition probabilities when hospitalised in ICU on MV\r\n    m_p_t[\"MV_mild\",  M_t == \"MV_mild\"]  <- (1 - input_params$p_D_mild - max(p_MV_ICU_mild[df_X$n_cycles_MV]) - max(p_mild_moderate[df_X$mild_moderate_YN]) - max(p_mild_severe[df_X$mild_severe_YN]))\r\n    m_p_t[\"ICU_mild\", M_t == \"MV_mild\"]  <- max(p_MV_ICU_mild[df_X$n_cycles_MV])\r\n    m_p_t[\"GW_mild\",  M_t == \"MV_mild\"]  <- 0\r\n    m_p_t[\"REC_mild\", M_t == \"MV_mild\"]  <- 0\r\n    m_p_t[\"D_mild\",   M_t == \"MV_mild\"]  <- input_params$p_D_mild    \r\n    \r\n    m_p_t[\"MV_moderate\", M_t == \"MV_mild\"] <- max(p_mild_moderate[df_X$mild_moderate_YN])\r\n    m_p_t[\"MV_severe\", M_t == \"MV_mild\"] <- max(p_mild_severe[df_X$mild_severe_YN])\r\n    \r\n    # transition probabilities when hospitalised in ICU without MV\r\n    m_p_t[\"MV_mild\",  M_t == \"ICU_mild\"] <- 0\r\n    m_p_t[\"ICU_mild\", M_t == \"ICU_mild\"] <- 1 - input_params$p_D_mild - input_params$p_ICU_GW_mild - max(p_mild_moderate[df_X$mild_moderate_YN]) - max(p_mild_severe[df_X$mild_severe_YN])\r\n    m_p_t[\"GW_mild\",  M_t == \"ICU_mild\"] <- input_params$p_ICU_GW_mild        \r\n    m_p_t[\"REC_mild\", M_t == \"ICU_mild\"] <- 0\r\n    m_p_t[\"D_mild\",   M_t == \"ICU_mild\"] <- input_params$p_D_mild    \r\n    \r\n    m_p_t[\"ICU_moderate\", M_t == \"ICU_mild\"] <- max(p_mild_moderate[df_X$mild_moderate_YN])\r\n    m_p_t[\"ICU_severe\", M_t == \"ICU_mild\"] <- max(p_mild_severe[df_X$mild_severe_YN])\r\n    \r\n    # transition probabilities when hospitalised outside ICU\r\n    m_p_t[\"MV_mild\",  M_t == \"GW_mild\"] <- 0\r\n    m_p_t[\"ICU_mild\", M_t == \"GW_mild\"] <- 0\r\n    m_p_t[\"GW_mild\",  M_t == \"GW_mild\"] <- (1 - input_params$p_D_mild - input_params$p_GW_REC_mild)\r\n    m_p_t[\"REC_mild\", M_t == \"GW_mild\"] <- input_params$p_GW_REC_mild\r\n    m_p_t[\"D_mild\",   M_t == \"GW_mild\"] <- input_params$p_D_mild    \r\n    \r\n    # transition probabilities when recovered\r\n    m_p_t[\"MV_mild\",  M_t == \"REC_mild\"] <- 0\r\n    m_p_t[\"ICU_mild\", M_t == \"REC_mild\"] <- 0\r\n    m_p_t[\"GW_mild\",  M_t == \"REC_mild\"] <- 0\r\n    m_p_t[\"REC_mild\", M_t == \"REC_mild\"] <- 1 - input_params$p_D_mild\r\n    m_p_t[\"D_mild\",   M_t == \"REC_mild\"] <- input_params$p_D_mild  \r\n    \r\n    # transition probabilities when Dead\r\n    m_p_t[\"MV_mild\",  M_t == \"D_mild\"]  <- 0\r\n    m_p_t[\"ICU_mild\", M_t == \"D_mild\"]  <- 0\r\n    m_p_t[\"GW_mild\",  M_t == \"D_mild\"]  <- 0\r\n    m_p_t[\"REC_mild\", M_t == \"D_mild\"]  <- 0 \r\n    m_p_t[\"D_mild\",   M_t == \"D_mild\"]  <- 1  \r\n    \r\n    ######################## moderate\r\n    # transition probabilities when hospitalised in ICU on MV\r\n    m_p_t[\"MV_moderate\",  M_t == \"MV_moderate\"]  <- (1 - input_params$p_D_moderate - max(p_MV_ICU_moderate[df_X$n_cycles_MV]) - max(p_moderate_severe[df_X$moderate_severe_YN]))\r\n    m_p_t[\"ICU_moderate\", M_t == \"MV_moderate\"]  <- max(p_MV_ICU_moderate[df_X$n_cycles_MV])\r\n    m_p_t[\"GW_moderate\",  M_t == \"MV_moderate\"]  <- 0\r\n    m_p_t[\"REC_moderate\", M_t == \"MV_moderate\"]  <- 0\r\n    m_p_t[\"D_moderate\",   M_t == \"MV_moderate\"]  <- input_params$p_D_moderate \r\n    \r\n    m_p_t[\"MV_severe\", M_t == \"MV_moderate\"] <- max(p_moderate_severe[df_X$moderate_severe_YN])\r\n    \r\n    # transition probabilities when hospitalised in ICU without MV\r\n    m_p_t[\"MV_moderate\",  M_t == \"ICU_moderate\"] <- 0\r\n    m_p_t[\"ICU_moderate\", M_t == \"ICU_moderate\"] <- (1 - input_params$p_D_moderate - input_params$p_ICU_GW_moderate - max(p_moderate_severe[df_X$moderate_severe_YN]))\r\n    m_p_t[\"GW_moderate\",  M_t == \"ICU_moderate\"] <- input_params$p_ICU_GW_moderate \r\n    m_p_t[\"REC_moderate\", M_t == \"ICU_moderate\"] <- 0\r\n    m_p_t[\"D_moderate\",   M_t == \"ICU_moderate\"] <- input_params$p_D_moderate    \r\n    \r\n    m_p_t[\"ICU_severe\", M_t == \"ICU_moderate\"] <- max(p_moderate_severe[df_X$moderate_severe_YN])\r\n    \r\n    # transition probabilities when hospitalised outside ICU\r\n    m_p_t[\"MV_moderate\",  M_t == \"GW_moderate\"] <- 0\r\n    m_p_t[\"ICU_moderate\", M_t == \"GW_moderate\"] <- 0\r\n    m_p_t[\"GW_moderate\",  M_t == \"GW_moderate\"] <- (1 - input_params$p_D_moderate - input_params$p_GW_REC_moderate)\r\n    m_p_t[\"REC_moderate\", M_t == \"GW_moderate\"] <- input_params$p_GW_REC_moderate\r\n    m_p_t[\"D_moderate\",   M_t == \"GW_moderate\"] <- input_params$p_D_moderate\r\n    \r\n    # transition probabilities when recovered\r\n    m_p_t[\"MV_moderate\",  M_t == \"REC_moderate\"] <- 0\r\n    m_p_t[\"ICU_moderate\", M_t == \"REC_moderate\"] <- 0\r\n    m_p_t[\"GW_moderate\",  M_t == \"REC_moderate\"] <- 0\r\n    m_p_t[\"REC_moderate\", M_t == \"REC_moderate\"] <- 1 - input_params$p_D_moderate\r\n    m_p_t[\"D_moderate\",   M_t == \"REC_moderate\"] <- input_params$p_D_moderate  \r\n    \r\n    # transition probabilities when Dead\r\n    m_p_t[\"MV_moderate\",  M_t == \"D_moderate\"]  <- 0\r\n    m_p_t[\"ICU_moderate\", M_t == \"D_moderate\"]  <- 0\r\n    m_p_t[\"GW_moderate\",  M_t == \"D_moderate\"]  <- 0\r\n    m_p_t[\"REC_moderate\", M_t == \"D_moderate\"]  <- 0 \r\n    m_p_t[\"D_moderate\",   M_t == \"D_moderate\"]  <- 1\r\n    \r\n    ######################## severe\r\n    # transition probabilities when hospitalised in ICU on MV\r\n    m_p_t[\"MV_severe\",  M_t == \"MV_severe\"]  <- (1 - input_params$p_D_severe - max(p_MV_ICU_severe[df_X$n_cycles_MV]))\r\n    m_p_t[\"ICU_severe\", M_t == \"MV_severe\"]  <- max(p_MV_ICU_severe[df_X$n_cycles_MV])\r\n    m_p_t[\"GW_severe\",  M_t == \"MV_severe\"]  <- 0\r\n    m_p_t[\"REC_severe\", M_t == \"MV_severe\"]  <- 0\r\n    m_p_t[\"D_severe\",   M_t == \"MV_severe\"]  <- input_params$p_D_severe    \r\n    \r\n    # transition probabilities when hospitalised in ICU without MV\r\n    m_p_t[\"MV_severe\",  M_t == \"ICU_severe\"] <- 0\r\n    m_p_t[\"ICU_severe\", M_t == \"ICU_severe\"] <- (1 - input_params$p_D_severe - input_params$p_ICU_GW_severe) \r\n    m_p_t[\"GW_severe\",  M_t == \"ICU_severe\"] <- input_params$p_ICU_GW_severe \r\n    m_p_t[\"REC_severe\", M_t == \"ICU_severe\"] <- 0\r\n    m_p_t[\"D_severe\",   M_t == \"ICU_severe\"] <- input_params$p_D_severe    \r\n    \r\n    # transition probabilities when hospitalised outside ICU\r\n    m_p_t[\"MV_severe\",  M_t == \"GW_severe\"] <- 0\r\n    m_p_t[\"ICU_severe\", M_t == \"GW_severe\"] <- 0\r\n    m_p_t[\"GW_severe\",  M_t == \"GW_severe\"] <- (1 - input_params$p_D_severe - input_params$p_GW_REC_severe) \r\n    m_p_t[\"REC_severe\", M_t == \"GW_severe\"] <- input_params$p_GW_REC_severe\r\n    m_p_t[\"D_severe\",   M_t == \"GW_severe\"] <- input_params$p_D_severe    \r\n    \r\n    # transition probabilities when recovered\r\n    m_p_t[\"MV_severe\",  M_t == \"REC_severe\"] <- 0\r\n    m_p_t[\"ICU_severe\", M_t == \"REC_severe\"] <- 0\r\n    m_p_t[\"GW_severe\",  M_t == \"REC_severe\"] <- 0\r\n    m_p_t[\"REC_severe\", M_t == \"REC_severe\"] <- 1 - input_params$p_D_severe\r\n    m_p_t[\"D_severe\",   M_t == \"REC_severe\"] <- input_params$p_D_severe  \r\n    \r\n    # transition probabilities when Dead\r\n    m_p_t[\"MV_severe\",  M_t == \"D_severe\"]  <- 0\r\n    m_p_t[\"ICU_severe\", M_t == \"D_severe\"]  <- 0\r\n    m_p_t[\"GW_severe\",  M_t == \"D_severe\"]  <- 0\r\n    m_p_t[\"REC_severe\", M_t == \"D_severe\"]  <- 0 \r\n    m_p_t[\"D_severe\",   M_t == \"D_severe\"]  <- 1\r\n    \r\n    return(t(m_p_t))\r\n  }\r\n  \r\n  Costs <- function (M_t, Trt, input_params, df_X, df_c) {\r\n    # Arguments:\r\n    # M_t: health state occupied at cycle t (character variable)\r\n    # Returns: \r\n    # costs accrued in this cycle\r\n    # Trt:  treatment\r\n    \r\n    # Treatment specific transition costs\r\n    if (Trt == \"Standard of care\") {\r\n      c_trt <- 0\r\n    } else if (Trt == \"FX06 treatment\") {\r\n      c_trt <- df_c$cost[which(df_c$type == 'c_trt')]\r\n    } \r\n    \r\n    c_t <- c()\r\n    \r\n    c_t[M_t %in% c(\"MV_mild\", \"MV_moderate\", \"MV_severe\")] <- if_else(Trt == \"FX06 treatment\" & df_X$trt_YN == 1, df_c$cost[which(df_c$type == \"c_MV\")] + df_c$cost[which(df_c$type == \"c_trt\")], df_c$cost[which(df_c$type == \"c_MV\")])\r\n    c_t[M_t %in% c(\"ICU_mild\", \"ICU_moderate\", \"ICU_severe\")] <- if_else(Trt == \"FX06 treatment\" & df_X$trt_YN == 1, df_c$cost[which(df_c$type == \"c_ICU\")] + df_c$cost[which(df_c$type == \"c_trt\")], df_c$cost[which(df_c$type == \"c_ICU\")])\r\n    c_t[M_t %in% c(\"GW_mild\", \"GW_moderate\", \"GW_severe\")] <- if_else(Trt == \"FX06 treatment\" & df_X$trt_YN == 1, df_c$cost[which(df_c$type == \"c_GW\")] + df_c$cost[which(df_c$type == \"c_trt\")], df_c$cost[which(df_c$type == \"c_GW\")])\r\n    c_t[M_t %in% c(\"REC_mild\", \"REC_moderate\", \"REC_severe\")]  <- df_c$cost[which(df_c$type == \"c_REC\")] \r\n    c_t[M_t %in% c(\"D_mild\", \"D_moderate\", \"D_severe\")]    <- df_c$cost[which(df_c$type == \"c_D\")]  \r\n    \r\n    return(c_t)  # return costs accrued this cycle\r\n  }\r\n  \r\n  MicroSim <- function(Trt, seed, input_params, df_X, df_c) {\r\n    \r\n    set.seed(seed)\r\n    n_states <- length(input_params$v_names_states) # the number of health states\r\n    \r\n    m_M <- m_C <-  matrix(nrow = input_params$n_i, ncol = input_params$n_cycles + 1, \r\n                          dimnames = list(paste(\"ind\"  , 1:input_params$n_i, sep = \" \"), \r\n                                          paste(\"cycle\", 0:input_params$n_cycles, sep = \" \")))  \r\n    \r\n    m_M [, 1] <- as.character(input_params$df_X$M_init) # initial health state at cycle 0 for individual i\r\n    # calculate costs per individual during cycle 0\r\n    m_C[, 1]  <- Costs(m_M[, 1], Trt=Trt, input_params = input_params, df_X = df_X, df_c = df_c)     \r\n    \r\n    # open a loop for time running cycles 1 to n_cycles \r\n    for (t in 1:input_params$n_cycles) {\r\n      # calculate the transition probabilities for the cycle based on health state t\r\n      m_P <- Probs(m_M[, t], t, Trt, input_params, df_X)\r\n      # check if transition probabilities are between 0 and 1\r\n      check_transition_probability(m_P, verbose = F)\r\n      # check if each of the rows of the transition probabilities matrix sum to one\r\n      check_sum_of_transition_array(m_P, n_rows = input_params$n_i, n_cycles = input_params$n_cycles, verbose = F)\r\n      \r\n      # sample the next health state and store that state in matrix m_M\r\n      m_M[, t + 1]  <- samplev(m_P, 1)    \r\n      # calculate costs per individual during cycle t + 1\r\n      m_C[, t + 1]  <- Costs(m_M[, t + 1], Trt=Trt, input_params = input_params, df_X = df_X, df_c = df_c)     \r\n      \r\n      # update time since illness onset for t + 1 \r\n      df_X$mild_moderate_YN <- df_X$mild_severe_YN <- if_else(t+1 < 7 & df_X$Severity == \"mild\", 1, 2)\r\n      df_X$moderate_severe_YN <- if_else(t+1 < 7 & df_X$Severity == \"moderate\", 1, 2)\r\n      \r\n      df_X$n_cycles_MV <- if_else(grepl(\"MV\", m_M[, t + 1]), df_X$n_cycles_MV +1, df_X$n_cycles_MV)\r\n      \r\n      df_X$n_cycles_ICU <- if_else(m_M[, t + 1] %in% c(\"MV_mild\", \"MV_moderate\", \"MV_severe\", \"ICU_mild\", \"ICU_moderate\", \"ICU_severe\"), \r\n                                   df_X$n_cycles_ICU +1,\r\n                                   df_X$n_cycles_ICU)\r\n      \r\n      df_X$trt_YN <- if_else(m_M[, t + 1] %in% c(\"MV_mild\", \"MV_moderate\", \"MV_severe\",\r\n                                                 \"ICU_mild\", \"ICU_moderate\", \"ICU_severe\",\r\n                                                 \"GW_mild\", \"GW_moderate\", \"GW_severe\")\r\n                             & t+1 < 5\r\n                             , 1\r\n                             , 0)\r\n      \r\n      # Display simulation progress\r\n      if(t/(input_params$n_cycles/10) == round(t/(input_params$n_cycles/10), 0)) { # display progress every 10%\r\n        cat('\\r', paste(t/input_params$n_cycles * 100, \"% done\", sep = \" \"))\r\n      }\r\n      \r\n    } # close the loop for the time points \r\n    \r\n    tc      <- rowSums(m_C)   # total cost per individual\r\n    tc_hat  <- mean(tc)       # average cost \r\n    # store the results from the simulation in a list\r\n    results <- list(df_X = df_X, m_M = m_M, m_C = m_C, tc = tc, tc_hat = tc_hat)   \r\n    \r\n    return(results)  # return the results\r\n  }\r\n  \r\n  run_simulation <- function(c_trt){\r\n    input_params <- input_parameters(c_trt=c_trt)\r\n    df_X <- as.data.frame(input_params$df_X)\r\n    df_c <- as.data.frame(input_params$df_c)\r\n    outcomes_SoC   <- MicroSim(Trt=\"Standard of care\", seed = 77, input_params = input_params, df_X = df_X, df_c = df_c)\r\n    outcomes_trt   <- MicroSim(Trt=\"FX06 treatment\", seed = 77, input_params = input_params, df_X = df_X, df_c = df_c)\r\n    outcomes <- list(outcomes_SoC = outcomes_SoC, outcomes_trt = outcomes_trt)\r\n    return(outcomes)\r\n  }\r\n  outcomes <- run_simulation(c_trt)\r\n  return(outcomes)\r\n}\r\n\r\nlibrary(shiny)\r\n\r\nui <- fluidPage(\r\n  \r\n  # Application title\r\n  titlePanel(\"BIA\"),\r\n  \r\n  sidebarPanel(\r\n    numericInput(\"input_c_trt\", \"Enter average treatment costs per day (EUR):\", value = 0),\r\n    sliderInput(\"modifier_mild_moderate\", \"Set the reduction in disease progression from mild to moderate ARDS for the treatment population:\", min = 0, max = 1, value = 0.1, step = 0.01),\r\n    actionButton(\"calculate\", \"Calculate\"),\r\n    textOutput(\"tc_hat_soc\"),\r\n    textOutput(\"tc_hat_trt\")\r\n  )\r\n  # Show a plot of the generated distribution\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n  #inputvalue <- renderText(input$input_c_trt)\r\n  observeEvent(input$calculate, {\r\n    req(input$input_c_trt)\r\n    #source(\"https://raw.githubusercontent.com/clazinusveijer/shinylive_BIA/refs/heads/main/run_simulation.R\")\r\n    BIA <- run_simulation_st(c_trt = input$input_c_trt)\r\n    #tc_hat_soc <- round(BIA$outcomes_SoC$tc_hat, 2)\r\n    #tc_hat_trt <- round(BIA$outcomes_trt$tc_hat, 2)\r\n    output$tc_hat_soc <- renderText({ paste(\"Per patient costs SoC:\", round(BIA$outcomes_SoC$tc_hat, 2)) })\r\n    output$tc_hat_trt <- renderText({ paste(\"Per patient costs FX06:\", round(BIA$outcomes_trt$tc_hat, 2)) })\r\n  })\r\n}\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\n\r\n#library(shiny)\r\n#\r\n## Define a simple function\r\n#my_function <- function(a, b) {\r\n#  return(a + b)\r\n#}\r\n#\r\n#ui <- fluidPage(\r\n#  numericInput(\"num1\", \"Number 1\", value = 0),\r\n#  numericInput(\"num2\", \"Number 2\", value = 0),\r\n#  actionButton(\"my_button\", \"Calculate\"),\r\n#  textOutput(\"result\")\r\n#)\r\n#\r\n#server <- function(input, output, session) {\r\n#  observeEvent(input$my_button, {\r\n#    req(input$num1, input$num2)  # Ensure inputs are available\r\n#    result <- my_function(input$num1, input$num2)\r\n#    output$result <- renderText({ result })\r\n#  })\r\n#}\r\n#\r\n#shinyApp(ui = ui, server = server)\r\n#","type":"text"},{"name":"BIA_FX06_ARDS.Rproj","content":"Version: 1.0\r\nProjectId: 17cfc057-d8c1-4007-b0a5-23a9e1f5230f\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
